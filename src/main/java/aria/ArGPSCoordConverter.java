/*
Adept MobileRobots Robotics Interface for Applications (ARIA)
Copyright (C) 2004-2005 ActivMedia Robotics LLC
Copyright (C) 2006-2010 MobileRobots Inc.
Copyright (C) 2011-2015 Adept Technology, Inc.
Copyright (C) 2016-2018 Omron Adept Technologies, Inc.

     This program is free software; you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
     the Free Software Foundation; either version 2 of the License, or
     (at your option) any later version.

     This program is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.

     You should have received a copy of the GNU General Public License
     along with this program; if not, write to the Free Software
     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

If you wish to redistribute ARIA under different terms, contact 
Adept MobileRobots for information about a commercial version of ARIA at 
robots@mobilerobots.com or 
Adept MobileRobots, 10 Columbia Drive, Amherst, NH 03031; +1-603-881-7960
*/
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package aria;

public class ArGPSCoordConverter {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  public ArGPSCoordConverter(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(ArGPSCoordConverter obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        AriaJavaJNI.delete_ArGPSCoordConverter(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public ArGPSCoordConverter(ArGPS _gps) {
    this(AriaJavaJNI.new_ArGPSCoordConverter__SWIG_0(ArGPS.getCPtr(_gps), _gps), true);
  }

  public ArGPSCoordConverter() {
    this(AriaJavaJNI.new_ArGPSCoordConverter__SWIG_1(), true);
  }

  public ArGPSCoordConverter(SWIGTYPE_p_double originLat, SWIGTYPE_p_double originLon, SWIGTYPE_p_double originAlt, ArGPS _gps) {
    this(AriaJavaJNI.new_ArGPSCoordConverter__SWIG_2(SWIGTYPE_p_double.getCPtr(originLat), SWIGTYPE_p_double.getCPtr(originLon), SWIGTYPE_p_double.getCPtr(originAlt), ArGPS.getCPtr(_gps), _gps), true);
  }

  public ArGPSCoordConverter(SWIGTYPE_p_double originLat, SWIGTYPE_p_double originLon, SWIGTYPE_p_double originAlt) {
    this(AriaJavaJNI.new_ArGPSCoordConverter__SWIG_3(SWIGTYPE_p_double.getCPtr(originLat), SWIGTYPE_p_double.getCPtr(originLon), SWIGTYPE_p_double.getCPtr(originAlt)), true);
  }

  public ArGPSCoordConverter(ArLLACoords originlla, ArGPS _gps) {
    this(AriaJavaJNI.new_ArGPSCoordConverter__SWIG_4(ArLLACoords.getCPtr(originlla), originlla, ArGPS.getCPtr(_gps), _gps), true);
  }

  public Ar3DPoint convert(ArLLACoords lla) {
    return new Ar3DPoint(AriaJavaJNI.ArGPSCoordConverter_convert__SWIG_0(swigCPtr, this, ArLLACoords.getCPtr(lla), lla), true);
  }

  public Ar3DPoint convert(SWIGTYPE_p_double lat, SWIGTYPE_p_double lon, SWIGTYPE_p_double alt) {
    return new Ar3DPoint(AriaJavaJNI.ArGPSCoordConverter_convert__SWIG_1(swigCPtr, this, SWIGTYPE_p_double.getCPtr(lat), SWIGTYPE_p_double.getCPtr(lon), SWIGTYPE_p_double.getCPtr(alt)), true);
  }

  public Ar3DPoint getCurrent() {
    return new Ar3DPoint(AriaJavaJNI.ArGPSCoordConverter_getCurrent(swigCPtr, this), true);
  }

  public SWIGTYPE_p_ArRetFunctorT_Ar3DPoint_t getCurrentFunc() {
    long cPtr = AriaJavaJNI.ArGPSCoordConverter_getCurrentFunc(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_ArRetFunctorT_Ar3DPoint_t(cPtr, false);
  }

  public ArPose getCurrent2DPose() {
    return new ArPose(AriaJavaJNI.ArGPSCoordConverter_getCurrent2DPose(swigCPtr, this), true);
  }

  public SWIGTYPE_p_ArRetFunctorT_ArPose_t getCurrent2DPoseFunc() {
    long cPtr = AriaJavaJNI.ArGPSCoordConverter_getCurrent2DPoseFunc(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_ArRetFunctorT_ArPose_t(cPtr, false);
  }

}
